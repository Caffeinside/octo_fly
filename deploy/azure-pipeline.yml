trigger:
- master
- prod

resources:
- repo: self

pool:
  vmImage: 'ubuntu-18.04'

variables:
  dockerRegistryServiceConnection: 'dslabOcto'
  imageRepository: 'octo_fly'
  containerRegistry: 'dslabocto.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/docker/Dockerfile'
  tag: '$(Build.BuildId)'

  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
    deployServerServiceConnection: 'BASA-dslab-webapp-dev'
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/prod') }}:
    deployServerServiceConnection: 'BASA-dslab-webapp-prod'


jobs:
- job: Test
  displayName: Test

  steps:
  - script: |
      conda create --name octo_fly python=3.7 -y
      export PATH="/usr/share/miniconda/bin:$PATH"
      source activate octo_fly
      pip install -e .[tests]
    displayName: Install requirements
  - script: |
      export PATH="/usr/share/miniconda/bin:$PATH"
      source activate octo_fly
      pytest tests
    displayName: Run unit tests

- job: Build
  displayName: Build and push
  dependsOn: Test
  condition: succeeded()
  steps:
  - task: Docker@2
    displayName: Build and push an image to container registry
    inputs:
      containerRegistry: '$(dockerRegistryServiceConnection)'
      repository: '$(imageRepository)'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'
      buildContext: './'
      tags: |
        $(tag)
        latest
